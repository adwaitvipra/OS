Write a program which given an inode number will 
	print  that  inode  from
		 an ext2 file system.

Submit file, with name
	inodenumber.c

Program runs like this:

	./a.out /dev/sdb1 /10

	(format: ./a.out  device-file-name  inode-number)

	<inode printed here>

Notes:

See this recording: ext2: reading superblock, bg descriptors, and Inode 

Before you start working on this, 
	you need to first completely understand the ext2 file system layout. 
		The notes available at http://wiki.osdev.org/Ext2 should be of help.  
			https://www.nongnu.org/ext2-doc/ext2.html is also useful.

On linux systems the hard disk partitions
	 are accessible thorought the file interface 
		provided by files like /dev/sda1, /dev/sdb2, etc.  

You can call open("/dev/sda2", O_RDONLY) and 
	start reading the partition /dev/sda2 as if it was a file. 
		You need superuser privileges to make this open call. 

So you can try this in a virtualbox environment, 
	by adding an extra disk to your Ubuntu virtual machine 
		and formatting the disk with ext2 layout.

Try reading the file system incrementally, 
	that is superblock, then group descriptors, and 
		so on to make sure that you are on the right path.

Some hints:

super-block starts at 1024 bytes offset, first 1KB is boot-block

	group descriptors start at 1 file-system-block offset
		from the beginning of partition.?
			(consider boot block for first group)
Size of inode is stored in super block

See the online diagrams of data structures for directory entries

Use the 64 bit variants of the file handling library functions (e.g. lseek64)

Try to modularise your code to simplify the work

Use http://wiki.osdev.org

You need to install e2fslibs-dev to get the header files.
================================================================================

FOR EACH BLOCK GROUP ON ANY PARTITION:

	FIXED :
		% AT START OF ANY PARTITION 
			BEFORE START OF BLOCK GROUPS:

				OFFSET(BOOT_BLK) = 0B
				SIZEOF(BOOT_BLK) = 1024B

			OFFSET(SUPER_BLK) = 1024B 
			SIZEOF(SUPER_BLK) = 1024B

	VARIABLE : SIZEOF(BLK)

	FIXED : 
		LET X BE INDEX OF ZERO BASED ARRAY OF BLOCK GROUPS

			% FOR Xth BLOCK GROUP, X IN [0..N] :

				OFFSET(GRP_DESC) = SIZEOF(BOOT_BLK) 
							+ X * SIZEOF(GRP_BLK)
								+ SIZEOF(BLK)

================================================================================
CALCULATING BLK GRP NUM & LOCAL INODE IDX :

	AS BLK_GRP & INODE TABLE (ARRAY) ARE ZERO BASED INDEXES, 
		SUBSTRACTING ONE FROM INODE

	LOCATING BLOCK GROUP :
		BLK_GRP_NUM = (INODE - 1) / INODES_PER_GRP

	LOCATING INODE :
		LOCAL_INODE_IDX = (INODE - 1) % INODES_PER_GRP
================================================================================

